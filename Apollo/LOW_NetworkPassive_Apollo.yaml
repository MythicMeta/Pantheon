name: "Network Passive Recon - Apollo"
description: "Passive network reconnaissance using BOFs that read cached network information"
trigger: manual
trigger_data:
  payload_types:
    - apollo
keywords:
  - apollo_callback
environment: {}

# Repository: https://github.com/trustedsec/CS-Situational-Awareness-BOF

steps:
  - name: "IPConfig"
    inputs:
      CALLBACK_ID: env.display_id
    action: task_create
    action_data:
      callback_display_id: CALLBACK_ID
      params: '{
        "coff_name": "ipconfig.x64.o",
        "function": "go",
        "arguments": [],
        "serialized_arguments": "00000000"
      }'
      command_name: execute_coff

  - name: "RouteTable"
    inputs:
      CALLBACK_ID: env.display_id
    action: task_create
    depends_on:
      - IPConfig
    action_data:
      callback_display_id: CALLBACK_ID
      params: '{
        "coff_name": "routeprint.x64.o",
        "function": "go",
        "arguments": [],
        "serialized_arguments": "00000000"
      }'
      command_name: execute_coff

  - name: "DNSCache"
    inputs:
      CALLBACK_ID: env.display_id
    action: task_create
    depends_on:
      - RouteTable
    action_data:
      callback_display_id: CALLBACK_ID
      params: '{
        "coff_name": "listdns.x64.o",
        "function": "go",
        "arguments": [],
        "serialized_arguments": "00000000"
      }'
      command_name: execute_coff

  - name: "ARPTable"
    inputs:
      CALLBACK_ID: env.display_id
    action: task_create
    depends_on:
      - DNSCache
    action_data:
      callback_display_id: CALLBACK_ID
      params: '{
        "coff_name": "arp.x64.o",
        "function": "go",
        "arguments": [],
        "serialized_arguments": "00000000"
      }'
      command_name: execute_coff

  - name: "NetworkStats"
    inputs:
      CALLBACK_ID: env.display_id
    action: task_create
    depends_on:
      - ARPTable
    action_data:
      callback_display_id: CALLBACK_ID
      params: '{
        "coff_name": "netstat.x64.o",
        "function": "go",
        "arguments": [],
        "serialized_arguments": "00000000"
      }'

      command_name: execute_coff
